library std;
use std.standard.all;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_arith.all;	 
use ieee.std_logic_unsigned.all;

-- since The Memory is asynchronous read, there is no read signal, but you can use it based on your preference.
-- this memory gives 16 Bit data in one clock cycle, so edit the file to your requirement.

entity IDRR is 
	port (PC, Mem_d: in std_logic_vector(15 downto 0); clk, IFID_en: in std_logic;
				PC_out, Mem_d_out: out std_logic_vector(15 downto 0));
end entity;

architecture Form of IDRR is 
begin
process (Mem_read_en, clk)
 begin
 if(rising_edge(clk)) then
 if(Mem_read_en = '1') then
 PC_out <= PC;
 Mem_d_out <= Mem_d; 
 end if;
 end if;
 end process;
end Form;
